use super::algorithm_params::AlgorithmParams;

pub const ALGORITHMS: [AlgorithmParams; 51] = [
    // AC variants
    AlgorithmParams::AC { alpha: 1.25, beta: 0.5, q: 0.75, p: 1.0 },
    AlgorithmParams::AC { alpha: 0.75, beta: 1.0, q: 1.25, p: 0.5 },
    AlgorithmParams::AC { alpha: 1.5, beta: 0.5, q: 0.75, p: 0.5 },
    AlgorithmParams::AC { alpha: 1.25, beta: 0.5, q: 1.0, p: 0.75 },
    AlgorithmParams::AC { alpha: 0.5, beta: 0.5, q: 1.0, p: 0.75 },
    AlgorithmParams::AC { alpha: 0.25, beta: 0.5, q: 1.0, p: 0.75 },
    AlgorithmParams::AC { alpha: 1.5, beta: 0.5, q: 1.0, p: 0.75 },
    AlgorithmParams::AC { alpha: 1.5, beta: 0.75, q: 1.25, p: 0.75 },
    AlgorithmParams::AC { alpha: 1.5, beta: 1.5, q: 1.25, p: 1.25 },
    AlgorithmParams::AC { alpha: 1.5, beta: 1.25, q: 1.0, p: 0.75 },
    AlgorithmParams::AC { alpha: 0.25, beta: 1.0, q: 1.0, p: 0.75 },

    // BC variants
    AlgorithmParams::BC { workers_part: 0.15, regenerate_func: "swap_indexes" },
    AlgorithmParams::BC { workers_part: 0.15, regenerate_func: "reverse_elements" },
    AlgorithmParams::BC { workers_part: 0.25, regenerate_func: "swap_indexes" },
    AlgorithmParams::BC { workers_part: 0.25, regenerate_func: "reverse_elements" },
    AlgorithmParams::BC { workers_part: 0.4,  regenerate_func: "swap_indexes" },
    AlgorithmParams::BC { workers_part: 0.4,  regenerate_func: "reverse_elements" },
    AlgorithmParams::BC { workers_part: 0.5,  regenerate_func: "swap_indexes" },
    AlgorithmParams::BC { workers_part: 0.5,  regenerate_func: "reverse_elements" },
    AlgorithmParams::BC { workers_part: 0.6,  regenerate_func: "swap_indexes" },
    AlgorithmParams::BC { workers_part: 0.6,  regenerate_func: "reverse_elements" },
    AlgorithmParams::BC { workers_part: 0.65, regenerate_func: "swap_indexes" },
    AlgorithmParams::BC { workers_part: 0.65, regenerate_func: "reverse_elements" },
    AlgorithmParams::BC { workers_part: 0.75, regenerate_func: "swap_indexes" },
    AlgorithmParams::BC { workers_part: 0.75, regenerate_func: "reverse_elements" },
    AlgorithmParams::BC { workers_part: 0.9,  regenerate_func: "swap_indexes" },
    AlgorithmParams::BC { workers_part: 0.9,  regenerate_func: "reverse_elements" },

    // GA variants
    AlgorithmParams::GA { p_mutation: 0.2, select_func: "roulette", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.2, select_func: "roulette", mutate_func: "reverse_elements" },
    AlgorithmParams::GA { p_mutation: 0.2, select_func: "stochastic", mutate_func: "reverse_elements" },
    AlgorithmParams::GA { p_mutation: 0.2, select_func: "stochastic", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.2, select_func: "tournament", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.2, select_func: "tournament", mutate_func: "reverse_elements" },
    AlgorithmParams::GA { p_mutation: 0.4, select_func: "roulette", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.4, select_func: "roulette", mutate_func: "reverse_elements" },
    AlgorithmParams::GA { p_mutation: 0.4, select_func: "stochastic", mutate_func: "reverse_elements" },
    AlgorithmParams::GA { p_mutation: 0.4, select_func: "stochastic", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.4, select_func: "tournament", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.4, select_func: "tournament", mutate_func: "reverse_elements" },
    AlgorithmParams::GA { p_mutation: 0.6, select_func: "roulette", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.6, select_func: "roulette", mutate_func: "reverse_elements" },
    AlgorithmParams::GA { p_mutation: 0.6, select_func: "stochastic", mutate_func: "reverse_elements" },
    AlgorithmParams::GA { p_mutation: 0.6, select_func: "stochastic", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.6, select_func: "tournament", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.6, select_func: "tournament", mutate_func: "reverse_elements" },
    AlgorithmParams::GA { p_mutation: 0.8, select_func: "roulette", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.8, select_func: "roulette", mutate_func: "reverse_elements" },
    AlgorithmParams::GA { p_mutation: 0.8, select_func: "stochastic", mutate_func: "reverse_elements" },
    AlgorithmParams::GA { p_mutation: 0.8, select_func: "stochastic", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.8, select_func: "tournament", mutate_func: "swap_indexes" },
    AlgorithmParams::GA { p_mutation: 0.8, select_func: "tournament", mutate_func: "reverse_elements" },
];

/*

CLASSES_NEW = (
{  'type': 'AC', 'alpha': 1.25, 'beta': .5, 'q': .75, 'p': 1.    },
{  'type': 'AC', 'alpha': .75, 'beta': 1., 'q': 1.25, 'p': .5    },
{  'type': 'AC', 'alpha': 1.5,    'beta': .5, 'q': .75, 'p': .5    },
{  'type': 'AC', 'alpha': 1.25, 'beta': .5, 'q': 1, 'p': .75    },
{  'type': 'AC', 'alpha': .5, 'beta': .5, 'q': 1, 'p':  .75    },
{  'type': 'AC', 'alpha': .25, 'beta': .5, 'q': 1, 'p':  .75    },
{  'type': 'AC', 'alpha': 1.5,    'beta': .5, 'q': 1, 'p': .75    },
{  'type': 'AC', 'alpha': 1.5,    'beta': .75, 'q': 1.25, 'p': .75    },
{  'type': 'AC', 'alpha': 1.5,    'beta': 1.5, 'q': 1.25, 'p': 1.25    },
{  'type': 'AC', 'alpha': 1.5,    'beta': 1.25, 'q': 1,       'p': .75    },
{  'type': 'AC', 'alpha': .25, 'beta': 1, 'q': 1, 'p': .75    },

{  'type': 'BC', 'workers_part': .15, 'regenerate_func': 'swap_indexes'            },
{  'type': 'BC', 'workers_part': .15, 'regenerate_func': 'reverse_elements'        },
{  'type': 'BC', 'workers_part': .25, 'regenerate_func': 'swap_indexes'            },
{  'type': 'BC', 'workers_part': .25, 'regenerate_func': 'reverse_elements'        },
{  'type': 'BC', 'workers_part': .4, 'regenerate_func': 'swap_indexes'            },
{  'type': 'BC', 'workers_part': .4, 'regenerate_func': 'reverse_elements'        },
{  'type': 'BC', 'workers_part': .5, 'regenerate_func': 'swap_indexes'            },
{  'type': 'BC', 'workers_part': .5, 'regenerate_func': 'reverse_elements'        },
{  'type': 'BC', 'workers_part': .6, 'regenerate_func': 'swap_indexes'            },
{  'type': 'BC', 'workers_part': .6, 'regenerate_func': 'reverse_elements'        },
{  'type': 'BC', 'workers_part': .65, 'regenerate_func': 'swap_indexes'            },
{  'type': 'BC', 'workers_part': .65, 'regenerate_func': 'reverse_elements'        },
{  'type': 'BC', 'workers_part': .75, 'regenerate_func': 'swap_indexes'            },
{  'type': 'BC', 'workers_part': .75, 'regenerate_func': 'reverse_elements'        },
{  'type': 'BC', 'workers_part': .9, 'regenerate_func': 'swap_indexes'            },
{  'type': 'BC', 'workers_part': .9, 'regenerate_func': 'reverse_elements'        },

{  'type': 'GA', 'p_mutation': .2, 'select_func': 'roulette', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .2, 'select_func': 'roulette', 'mutate_func': 'reverse_elements'    },
{  'type': 'GA', 'p_mutation': .2, 'select_func': 'stochastic', 'mutate_func': 'reverse_elements'    },
{  'type': 'GA', 'p_mutation': .2, 'select_func': 'stochastic', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .2, 'select_func': 'tournament', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .2, 'select_func': 'tournament', 'mutate_func': 'reverse_elements'    },
{  'type': 'GA', 'p_mutation': .4, 'select_func': 'roulette', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .4, 'select_func': 'roulette', 'mutate_func': 'reverse_elements'    },
{  'type': 'GA', 'p_mutation': .4, 'select_func': 'stochastic', 'mutate_func': 'reverse_elements'    },
{  'type': 'GA', 'p_mutation': .4, 'select_func': 'stochastic', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .4, 'select_func': 'tournament', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .4, 'select_func': 'tournament', 'mutate_func': 'reverse_elements'    },
{  'type': 'GA', 'p_mutation': .6, 'select_func': 'roulette', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .6, 'select_func': 'roulette', 'mutate_func': 'reverse_elements'    },
{  'type': 'GA', 'p_mutation': .6, 'select_func': 'stochastic', 'mutate_func': 'reverse_elements'    },
{  'type': 'GA', 'p_mutation': .6, 'select_func': 'stochastic', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .6, 'select_func': 'tournament', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .6, 'select_func': 'tournament', 'mutate_func': 'reverse_elements'    },
{  'type': 'GA', 'p_mutation': .8, 'select_func': 'roulette', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .8, 'select_func': 'roulette', 'mutate_func': 'reverse_elements'    },
{  'type': 'GA', 'p_mutation': .8, 'select_func': 'stochastic', 'mutate_func': 'reverse_elements'    },
{  'type': 'GA', 'p_mutation': .8, 'select_func': 'stochastic', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .8, 'select_func': 'tournament', 'mutate_func': 'swap_indexes'        },
{  'type': 'GA', 'p_mutation': .8, 'select_func': 'tournament', 'mutate_func': 'reverse_elements'    },
)

 */